
#!/bin/bash

YELLOW='\e[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# –®–ª—è—Ö –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
INSTALL_DIR="/root/ritual_service"
SERVICE_NAME="ritual-container"

echo -e "${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ $INSTALL_DIR...${NC}"
mkdir -p "$INSTALL_DIR"

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É docker-compose
COMPOSE_FILE="/root/infernet-container-starter/deploy/docker-compose.yaml"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}"
cat <<EOF > "$INSTALL_DIR/monitor.sh"
#!/bin/bash

# –ö–æ–ª—å–æ—Ä–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ
YELLOW='\e[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# –ú–∞—Å—Å–∏–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å
containers=("infernet-node" "deploy-fluentbit-1" "deploy-redis-1")

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É docker-compose
COMPOSE_FILE="$HOME/infernet-container-starter/deploy/docker-compose.yaml"

# –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
LAST_RESTART_FILE="$HOME/ritual_service/last_restart_time"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –º–∏–Ω—É–ª–æ 4 –¥–Ω—ñ –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
check_time_for_restart() {
    if [ ! -f "$LAST_RESTART_FILE" ]; then
        echo "$(date +%s)" > "$LAST_RESTART_FILE"
        return 1
    fi

    last_restart=$(cat "$LAST_RESTART_FILE")
    current_time=$(date +%s)
    elapsed_time=$(( (current_time - last_restart) / 86400 ))  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≤ –¥–Ω—ñ

    if [ "$elapsed_time" -ge 4 ]; then
        return 0  # –ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç–∏
    else
        return 1  # –©–µ –Ω–µ —á–∞—Å
    fi
}

while true; do
    restart_needed=false

    for container in "${containers[@]}"; do
        if ! docker ps --format '{{.Names}}' | grep -q "^$container\$"; then
            echo -e "${RED}$(date):‚õîÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
            restart_needed=true
            break
        fi
    done

    if [ "$restart_needed" = true ] || check_time_for_restart; then
        echo -e "${YELLOW}$(date):‚ö†Ô∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
        docker compose -f "$COMPOSE_FILE" down
        
        echo -e "${YELLOW}$(date):‚ùóÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º...${NC}"
        sleep 30

        echo -e "${YELLOW}$(date):üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã.....${NC}"
        docker compose -f "$COMPOSE_FILE" up -d

        echo "$(date +%s)" > "$LAST_RESTART_FILE"  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
    else
        echo -e "${GREEN}$(date):‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${NC}"
    fi

    sleep 30
done


EOF

# –†–æ–±–∏–º–æ —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–º
chmod +x "$INSTALL_DIR/monitor.sh"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd-—Å–µ—Ä–≤—ñ—Å—É
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ systemd-—Å–µ—Ä–≤–∏—Å–∞..."
cat <<EOF > "/etc/systemd/system/$SERVICE_NAME.service"
[Unit]
Description=–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Ritual
After=docker.service
Requires=docker.service

[Service]
ExecStart=$INSTALL_DIR/monitor.sh
Restart=always
User=root

[Install]
WantedBy=multi-user.target
EOF

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è systemd
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd..."
systemctl daemon-reload

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
echo "üîß –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl enable "$SERVICE_NAME.service"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—É
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl start "$SERVICE_NAME.service"

# –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
# journalctl -u ritual-container.service -f

echo "‚úÖ –£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
