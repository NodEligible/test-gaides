#!/bin/bash

YELLOW='\e[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# –®–ª—è—Ö –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
INSTALL_DIR="/root/waku_service"
SERVICE_NAME="waku-container"

echo -e "${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ $INSTALL_DIR...${NC}"
mkdir -p "$INSTALL_DIR"

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –ª–æ–≥—É–≤–∞–Ω–Ω—è
LOG_FILE="$HOME/waku_service/monitor.log"

# –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
mkdir -p "$(dirname "$LOG_FILE")"

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –ª–æ–≥—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –≤—ñ–Ω –Ω–µ —ñ—Å–Ω—É—î
touch "$LOG_FILE"

# –ù–∞–¥–∞—î–º–æ –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å —É —Ñ–∞–π–ª
chmod 644 "$LOG_FILE"

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É docker-compose
COMPOSE_FILE="$HOME/nwaku-compose/docker-compose.yml"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}"
cat <<EOF > "$INSTALL_DIR/monitor.sh"
#!/bin/bash

# –ö–æ–ª—å–æ—Ä–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ
YELLOW='\e[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# –õ–æ–≥-—Ñ–∞–π–ª
LOG_FILE="$HOME/waku_service/monitor.log"

# –ú–∞—Å–∏–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç–∏
containers=("nwaku-compose-grafana-1" "nwaku-compose-waku-frontend-1" "nwaku-compose-prometheus-1" "nwaku-compose-nwaku-1" "nwaku-compose-postgres-exporter-1" "nwaku-compose-postgres-1")

while true; do
    restart_needed=false

    for container in "\${containers[@]}"; do
        if ! docker ps --format '{{.Names}}' | grep -q "^\$container\$"; then
            echo -e "\$(/usr/bin/date '+%Y-%m-%d %H:%M:%S') ‚õîÔ∏è ${RED} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä${NC} \$container ${RED}–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}" | tee -a "$LOG_FILE"
            restart_needed=true
        fi
    done
    if [ "\$restart_needed" = true ]; then
        docker compose -f "$COMPOSE_FILE" down
    echo -e "\$(/usr/bin/date '+%Y-%m-%d %H:%M:%S') ‚è≥ ${YELLOW} –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}" | tee -a "$LOG_FILE"   
    sleep 40
    docker compose -f "$COMPOSE_FILE" up -d
    echo -e "\$(/usr/bin/date '+%Y-%m-%d %H:%M:%S') üîé ${YELLOW} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã${NC} Waku ${YELLOW}–ø–æ–¥–Ω—è—Ç—ã, —Å–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç.${NC}" | tee -a "$LOG_FILE"
    else
        echo -e "\$(/usr/bin/date '+%Y-%m-%d %H:%M:%S') ‚úÖ ${GREEN} –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã${NC} Waku ${GREEN}—Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${NC}" | tee -a "$LOG_FILE"
    fi
    sleep 10m
done
EOF

# –†–æ–±–∏–º–æ —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–º
chmod +x "$INSTALL_DIR/monitor.sh"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd-—Å–µ—Ä–≤—ñ—Å—É
echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ systemd-—Å–µ—Ä–≤–∏—Å–∞...${NC}"
cat <<EOF > "/etc/systemd/system/$SERVICE_NAME.service"
[Unit]
Description=–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Waku
After=docker.service
Requires=docker.service

[Service]
Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ExecStart=/bin/bash /root/waku_service/monitor.sh
Restart=always
User=root
StandardOutput=append:/root/waku_service/service.log
StandardError=append:/root/waku_service/service.log

[Install]
WantedBy=multi-user.target
EOF

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è systemd
echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd...${NC}"
systemctl daemon-reload

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
echo -e "${YELLOW}üîß –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
systemctl enable "$SERVICE_NAME.service"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—É
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
systemctl start "$SERVICE_NAME.service"

echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
